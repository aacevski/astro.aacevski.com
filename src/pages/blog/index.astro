---
import { getCollection } from 'astro:content'
import MainLayout from '../../layouts/main-layout.astro'
import BaseHead from '../../components/base-head.astro'
import Breadcrumbs from '../../components/breadcrumbs-blog.astro'
import { SITE_TITLE } from '../../consts'
import type { CollectionEntry } from 'astro:content'
import BlogCard from '../../components/blog-card.astro'

const posts = await getCollection('blog')

const years = [
  ...new Set(posts.map((post) => post.data.pubDate.getFullYear())),
].sort((a, b) => b - a)

const sortByDate = (a: CollectionEntry<'blog'>, b: CollectionEntry<'blog'>) => {
  if (a.data.pubDate > b.data.pubDate) return -1
  if (a.data.pubDate < b.data.pubDate) return 1
  return 0
}

const postsByYear = years
  .map((year) =>
    posts.filter((post) => post.data.pubDate.getFullYear() === year),
  )
  .map((posts) => posts.sort(sortByDate))
---

<html lang='en' class='dark'>
  <head>
    <BaseHead title={`${SITE_TITLE} | Blog`} description='' />
  </head>
  <body>
    <MainLayout>
      <Breadcrumbs />
      <h1 class='text-4xl font-bold mb-4'>Blog</h1>
      <hr class='border-[#282828]' />
      {
        postsByYear.map((posts) => (
          <>
            <section class='flex gap-4'>
              <h2>{posts[0].data.pubDate.getFullYear()}</h2>
              <ul class='flex flex-col w-full gap-4'>
                {posts.map((post, index) => (
                  <BlogCard {...post} isLast={index === posts.length - 1} />
                ))}
              </ul>
            </section>
            <hr class='border-[#282828]' />
          </>
        ))
      }
    </MainLayout>
  </body>
</html>
